#!/bin/bash

#
# If I try to build project with std-modules and side lib `like a mathon`
# which used custom std-modules I recieved next error:
#
# > fatal error: module '_Builtin_stddef_max_align_t' is defined in both
#   '/home/user/.cache/clang/ModuleCache/1ZQ7RBKO4A6V0/_Builtin_stddef_max_align_t-1KLR31KNJ6263.pcm' and
#   '/home/user/.cache/clang/ModuleCache/1VEVSXT4LZMYX/_Builtin_stddef_max_align_t-1KLR31KNJ6263.pcm'
# 
# I doesn got reason of it and not find way to solve them
#
# UPD:/ I fix error if use same compile opitions in same order. BTW its not work with CMake... magic
#
# 

function compile_module {
    echo "compile module $2"
    clang++-14\
    -std=c++20\
    -stdlib=libc++\
    -fmodules\
    -O3\
    -fPIC\
    -Wall\
    -Wextra\
    -fmath-errno\
    -march=native\
    -ffast-math\
    -fcxx-exceptions\
    -fprebuilt-module-path=precompiled/\
    -fprebuilt-module-path=/home/user/Code/C++/Mathon/precompiled/\
    -c --precompile\
    $1 -o precompiled/$2.pcm
}

function compile_source {
    echo "compile $1"
    clang++-14\
    -std=c++20\
    -stdlib=libc++\
    -fmodules\
    -O3\
    -fPIC\
    -Wall\
    -Wextra\
    -fmath-errno\
    -march=native\
    -ffast-math\
    -fcxx-exceptions\
    # -fmodules-cache-path=/home/user/Code/C++/Mathon/.build/cache\
    -fprebuilt-module-path=../precompiled/\
    -fprebuilt-module-path=Mathon/precompiled/\
    $1 -c
}

function build_mesa() {
    prefix=$PWD/3rdparty/latest

    cd mesa
    meson setup --reconfigure . .mesa_build \
        -D buildtype=debug \
        -D prefix=$prefix \
        -D valgrind=false \
        -D gallium-drivers=iris \
        -D vulkan-drivers=intel \
        -D gallium-nine=false \
        -D gallium-omx="disabled" \
        -D platforms=x11,wayland \
        -D llvm=false \
        -D tools=intel \
        -D build-tests=false \
        -D vulkan-layers=overlay

    ninja -C ./.mesa_build/ install

    cd ..
}

function compile {
    clear

    export VK_ICD_FILENAMES=$PWD/3rdparty/latest/share/vulkan/icd.d/intel_icd.x86_64.json

    mkdir -p .build
    
    cd Mathon
    ./Mathon -rb
    cd ..
    
    cd .build

    cmake ..
#target 3rdparty
    cmake --build . --target Vulkan
    cmake --build . --target GLFW
    cd ..
    # cmake --build . --target Geometry.Triangle
    
# first target
    compile_module src/Vulkan/pipeline/VkMultisampling.cppm         Vk.Multisampler
    compile_module src/Vulkan/pipeline/VkDynamicStates.cppm         Vk.DynamicState
    compile_module src/Vulkan/pipeline/VkColorBlender.cppm          Vk.ColorBlender 
    compile_module src/Vulkan/pipeline/VkRasterizer.cppm            Vk.Rasterizer
    compile_module src/AppSettings.cppm                             App.Settings
    compile_module src/Vulkan/pipeline/VkAssembly.cppm              Vk.Assembly
    compile_module src/Vulkan/helpers/VkChecker.cppm                Vk.Checker
    compile_module src/Vulkan/helpers/VkGetter.cppm                 Vk.Getter
    compile_module src/NativeWrapper.cppm                           App.NativeWrapper
    compile_module src/Window.cppm                                  App.Window
    compile_module src/Vulkan/helpers/VkExtensions.cppm             Vk.Extensions
    compile_module src/Vulkan/core/VkPhysDevice.cppm                Vk.PhysicalDevice 
    compile_module src/Vulkan/core/VkInstance.cppm                  Vk.Instance
    compile_module src/Vulkan/VkSurface.cppm                        Vk.WindowSurface
    compile_module src/Vulkan/core/VkQueue.cppm                     Vk.Queue
    compile_module src/Vulkan/core/VkQueuePool.cppm                 Vk.QueuePool
    compile_module src/Vulkan/core/VkLogicDevice.cppm               Vk.LogicalDevice
    compile_module src/Vulkan/frame/cmdPool.cppm                    Vk.CommandPool
    compile_module src/Vulkan/pipeline/VkMemory.cppm                Vk.Memory
    compile_module src/Vulkan/VkSemaphore.cppm                      Vk.Semaphore 
    compile_module src/Vulkan/pipeline/VkLayout.cppm                Vk.Layout
    compile_module src/Vulkan/VkShader.cppm                         Vk.Shader  
    compile_module src/ShaderFactory.cppm                           App.ShaderFactory
    compile_module src/Vulkan/VkSwapchain.cppm                      Vk.Swapchain
    compile_module src/Vulkan/pipeline/VkViewport.cppm              Vk.Viewport
    compile_module src/Vulkan/pipeline/VkColorAttachment.cppm       Vk.ColorAttachment
    compile_module src/Vulkan/pipeline/VkRenderPass.cppm            Vk.RenderPass
    compile_module src/Vulkan/frame/VkImageView.cppm                Vk.ImageView
    compile_module src/Vulkan/frame/VkFramebuffer.cppm              Vk.Framebuffer 
    compile_module src/Vulkan/frame/VkCommandBuff.cppm              Vk.CommandBuffer 
    compile_module src/Vulkan/pipeline/VkVertexBuffer.cppm          Vk.VertexBuffer
    compile_module src/Geometry/Allocator.cppm                      Vk.HostAllocator
    compile_module src/Vulkan/pipeline/drawData.cppm                App.DrawData
    compile_module src/Geometry/Attributes.cppm                     Geometry.Attributes
    compile_module src/Geometry/Geometry.cppm                       Geometry
    compile_module src/Geometry/Quad.cppm                           Geometry.Quad
    compile_module src/Geometry/Triangle.cppm                       Geometry.Triangle
    compile_module src/Vulkan/pipeline/VkPipelineCache.cppm         Vk.PipelineCache
    compile_module src/Vulkan/pipeline/PipelineFactory.cppm         App.PipelineFactory
    compile_module src/Vulkan/pipeline/VkPipeline.cppm              Vk.Pipeline
    compile_module src/Vulkan/frame/VkFrame.cppm                    Vk.Frame
    compile_module src/Vulkan/frame/VkFramePool.cppm                Vk.FramePool
    compile_module src/RenderDevice.cppm                            App.RenderDevice
   
    
    

    cd .build
    cmake --build . -j7 --target VKEngine
    cd ..

#     cd .build
# compile_source ../src/Vulkan/pipeline/VkMultisampling.cppm  
# compile_source ../src/Vulkan/pipeline/VkDynamicStates.cppm  
# compile_source ../src/Vulkan/pipeline/VkColorBlender.cppm   
# compile_source ../src/Vulkan/pipeline/VkVertexBuffer.cppm   
# compile_source ../src/Vulkan/pipeline/VkRasterizer.cppm     
# compile_source ../src/AppSettings.cppm                      
# compile_source ../src/Vulkan/pipeline/VkAssembly.cppm       
# compile_source ../src/Vulkan/helpers/VkChecker.cppm         
# compile_source ../src/Vulkan/helpers/VkGetter.cppm          
# compile_source ../src/NativeWrapper.cppm                    
# compile_source ../src/Window.cppm                           
# compile_source ../src/Vulkan/helpers/VkExtensions.cppm      
# compile_source ../src/Vulkan/core/VkPhysDevice.cppm         
# compile_source ../src/Vulkan/core/VkInstance.cppm           
# compile_source ../src/Vulkan/VkSurface.cppm                 
# compile_source ../src/Vulkan/core/VkQueue.cppm              
# compile_source ../src/Vulkan/core/VkQueuePool.cppm          
# compile_source ../src/Vulkan/core/VkLogicDevice.cppm        
# compile_source ../src/Vulkan/VkSemaphore.cppm               
# compile_source ../src/Vulkan/pipeline/VkLayout.cppm         
# compile_source ../src/Vulkan/VkShader.cppm                  
# compile_source ../src/ShaderFactory.cppm                    
# compile_source ../src/Vulkan/VkSwapchain.cppm               
# compile_source ../src/Vulkan/pipeline/VkViewport.cppm       
# compile_source ../src/Vulkan/pipeline/VkColorAttachment.cppm
# compile_source ../src/Vulkan/pipeline/VkRenderPass.cppm     
# compile_source ../src/Vulkan/frame/VkImageView.cppm         
# compile_source ../src/Vulkan/frame/VkFramebuffer.cppm       
# compile_source ../src/Vulkan/frame/VkCommandBuff.cppm       
# compile_source ../src/Vulkan/pipeline/VkPipeline.cppm       
# compile_source ../src/Vulkan/frame/VkFrame.cppm             
# compile_source ../src/Vulkan/frame/VkFramePool.cppm         
# compile_source ../src/RenderDevice.cppm                     
# cd ..



    

# # sixth target

# seventh target

# main target
    # cmake --build . --target Geometry.Triangle

    # cd ..
    # mkdir   objects
    # cd      objects
        # compile_source src/Geometry/Triangle.cppm
    # cd ..
} 

function clean {
    rm -rf .build/
    rm -rf precompiled/
}

function help {
    echo "-r  or --run      = run VKEngine"
    echo "-c  or --clean    = clean all build files"
    echo "-b  or --build    = build project"
       echo "-rb or --rebuild  = totaly rebuild all project"
}

if [[ "$1" == "--clean" || "$1" == "-c" ]]; then
    clean
fi


if [[ "$1" == "--build" || "$1" == "-b" ]]; then
    compile
fi


if [[ "$1" == "--rebuild" || "$1" == "-rb" ]]; then
    clean
    compile
fi

if [[ "$1" == "--help" || "$1" == "-h" ]]; then
    help    
fi

if [[ "$1" == "--build_mesa" ]]; then
    build_mesa
fi

if [[ "$2" == "--run" || "$2" == "-r" || "$1" == "" ]]; then
    ./.build/src/VKEngine
fi


